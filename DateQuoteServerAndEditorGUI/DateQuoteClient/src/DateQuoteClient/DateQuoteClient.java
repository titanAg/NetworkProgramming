// Kyle Orcutt

package DateQuoteClient;

import java.io.IOException;
import java.net.DatagramPacket;
import java.net.DatagramSocket;
import java.net.InetAddress;
import java.net.SocketException;
import java.util.logging.Level;
import java.util.logging.Logger;
import static javax.swing.JOptionPane.ERROR_MESSAGE;
import static javax.swing.JOptionPane.showMessageDialog;

/**
 *
 * @author Kyle
 */
public class DateQuoteClient extends javax.swing.JFrame {
    final protected int PORT = 4445;
    private String messages = "";
    private String choice;
    /**
     * Creates new form DateQuoteClient
     */
    public DateQuoteClient() {
        initComponents();
        setTitle("Date Quote Selector");
        setBounds(700,450, this.getWidth(),this.getHeight());
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        bg_options = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        l_host = new javax.swing.JLabel();
        tf_inputHost = new javax.swing.JTextField();
        l_choice = new javax.swing.JLabel();
        rb_date = new javax.swing.JRadioButton();
        rb_quote = new javax.swing.JRadioButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        ta_output = new javax.swing.JTextArea();
        b_send = new javax.swing.JButton();
        b_exit = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        l_host.setText("Hostname:");

        tf_inputHost.setText("localhost");
        tf_inputHost.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tf_inputHostActionPerformed(evt);
            }
        });

        l_choice.setText("Choice:");

        bg_options.add(rb_date);
        rb_date.setText("Date");
        rb_date.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rb_dateActionPerformed(evt);
            }
        });

        bg_options.add(rb_quote);
        rb_quote.setText("Quote");
        rb_quote.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rb_quoteActionPerformed(evt);
            }
        });

        ta_output.setColumns(20);
        ta_output.setRows(5);
        jScrollPane1.setViewportView(ta_output);

        b_send.setText("Send");
        b_send.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b_sendActionPerformed(evt);
            }
        });

        b_exit.setText("Exit");
        b_exit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b_exitActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jScrollPane1)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(l_host)
                            .addComponent(l_choice))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(rb_date)
                                .addGap(18, 18, 18)
                                .addComponent(rb_quote))
                            .addComponent(tf_inputHost, javax.swing.GroupLayout.PREFERRED_SIZE, 205, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(b_send)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(b_exit, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(81, 81, 81))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(l_host)
                    .addComponent(tf_inputHost, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(l_choice)
                    .addComponent(rb_date)
                    .addComponent(rb_quote))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 143, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(b_exit)
                    .addComponent(b_send))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void rb_dateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rb_dateActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_rb_dateActionPerformed

    private void rb_quoteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rb_quoteActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_rb_quoteActionPerformed

    private void tf_inputHostActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tf_inputHostActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tf_inputHostActionPerformed

    private void b_sendActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b_sendActionPerformed
        String host = tf_inputHost.getText();
        choice = rb_date.isSelected() ? "date" : rb_quote.isSelected() ? "quote" : "";
        
        if (!host.isEmpty() && !choice.isEmpty()) {
            System.out.println("Host provided: " + host);
            System.out.println("Choice provided: " + choice + "\n");
            getMessage();
        }
        else {
            String msg = "Errors: ";
            msg += host.isEmpty() ? "-Host not provided " : "";
            msg += choice.isEmpty() ? "-Choice not selected" : "";
            System.out.println(msg);
            showMessageDialog(jPanel1, msg, "Input Error", ERROR_MESSAGE);
        }
    }//GEN-LAST:event_b_sendActionPerformed

    private void b_exitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b_exitActionPerformed
        System.out.println("User exited, terminating program");
        dispose();
        System.exit(0);
    }//GEN-LAST:event_b_exitActionPerformed

    private void getMessage() {
        try {
            // get a datagram socket
            DatagramSocket dsocket;
            dsocket = new DatagramSocket();
            
            // send request
            byte[] outBuf = new byte[256];
            outBuf = choice.getBytes();
            InetAddress address = InetAddress.getByName(tf_inputHost.getText());
            DatagramPacket packet = new DatagramPacket(outBuf, outBuf.length, address, PORT);
            dsocket.send(packet);

            // get response
            byte[] inBuf = new byte[256];
            packet = new DatagramPacket(inBuf, inBuf.length);
            dsocket.receive(packet);

            // display response
            String received = new String(packet.getData());
            System.out.println("Response from server: " + received);
            messages += received + "\n";
            
            ta_output.setText(messages);
            
            dsocket.close();
        } catch (SocketException se) {
            Logger.getLogger(DateQuoteClient.class.getName()).log(Level.SEVERE, null, se);
        } catch (IOException ioe) {
            Logger.getLogger(DateQuoteClient.class.getName()).log(Level.SEVERE, null, ioe);
        }

    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(DateQuoteClient.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(DateQuoteClient.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(DateQuoteClient.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(DateQuoteClient.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new DateQuoteClient().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton b_exit;
    private javax.swing.JButton b_send;
    private javax.swing.ButtonGroup bg_options;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel l_choice;
    private javax.swing.JLabel l_host;
    private javax.swing.JRadioButton rb_date;
    private javax.swing.JRadioButton rb_quote;
    private javax.swing.JTextArea ta_output;
    private javax.swing.JTextField tf_inputHost;
    // End of variables declaration//GEN-END:variables
}
